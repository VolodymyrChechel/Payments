@model IEnumerable<DebitAccountViewModel>

@{
    ViewBag.Title = "List of accounts";
}

<h2>List of accounts</h2>


<h4 class="text-danger"> @ViewBag.Message </h4>

@if (Model != null && Model.Count() != 0)
{
    
    <div class="form-group col-md-offset-7 col-md-5">
        <label for="paymentsOrderChange" class=" col-md-3 control-label"> Select ordering </label>
        <div class="col-md-9">
            <select class="form-control" id="accountsOrderChange">
                <option value="NUM_ASC">Sort ascending by number</option>
                <option value="NUM_DESC">Sort descending by number</option>
                <option value="NAME_ASC">Sort ascending by name</option>
                <option value="NAME_DESC">Sort descending by name</option>
                <option value="SUM_DESC">Sort descending by sum</option>
                <option value="SUM_ASC">Sort ascending by sum</option>
            </select>
        </div>
    </div>

    <div class="clearfix">
        <table class="table">
            <thead>
            <tr>
                <th class="col-md-1">Account number</th>
                <th>Name</th>
                <th>Sum on account</th>
                <th>Currency</th>
                <th>Status</th>
                <th></th>
            </tr>
            </thead>
            <tbody>
            @foreach (var account in Model)
            {
                <tr>
                    <td> @account.AccountNumber </td>
                    <td> @account.Name </td>
                    <td> @account.Sum </td>
                    <td> @account.Currency </td>
                    <td>
                        @if (account.IsBlocked)
                        {
                            @:Blocked
                        }
                        else
                        {
                            @:Unblocked
                        }
                    </td>
                    <td>
                        @Html.ActionLink("Change name", "ChangeNameAccount", new { id = account.AccountNumber }) |
                        @Html.ActionLink("Replenish", "Replenish", new { id = account.AccountNumber }) |
                        @Html.ActionLink("Withdraw", "Withdraw", new { id = account.AccountNumber }) |
                        @Html.ActionLink("Payment", "Payment", new { id = account.AccountNumber }) |
                        @if (account.IsBlocked)
                        {
                            @Html.ActionLink("Send a request to unblock", "UnblockAccountRequest", new {id = account.AccountNumber})
                        }
                        else
                        {
                            @Html.ActionLink("Block the account", "BlockAccount", new { id = account.AccountNumber })
                        }
                    </td>
                </tr>
            }
            </tbody>
        </table>
        @Html.ActionLink("Create a new account", "CreateDebitAccount", null, new {@class = "btn btn-success btn-sm"})
    </div>

    <script>


        @if (ViewBag.Selected != null)
    {
        <text>
        var sel = document.getElementById("accountsOrderChange");
        var val = '@ViewBag.Selected';
        for (var i = 0, j = sel.options.length; i < j; ++i) {
            if (sel.options[i].value === val) {
                sel.selectedIndex = i;
                break;
            }
        }
        </text>
        
     }
        document.getElementById("accountsOrderChange").addEventListener("change", changeOrderAccount);

        function changeOrderAccount() {
            var e = document.getElementById("accountsOrderChange");
            var option = e.options[e.selectedIndex].value;
            window.location.href = '/Accounts/Index/?sort=' + option;
        }
    </script>
}
else
{
    <p class="text-danger"> You have no account yet. Create a new just now </p>
}